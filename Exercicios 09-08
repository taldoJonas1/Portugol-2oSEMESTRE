
1. Fazer um algoritmo que leia diversos números, sendo que o 0 (zero) sinaliza o fim da leitura. Mostre:  o maior número, a média dos números positivos, e a quantidade de números divisíveis por 5.

programa
{
	
	funcao inicio()
	{
		inteiro n, maior, media, soma, qtd
		maior = 0
		soma = 0
		qtd = 0

		faca{
			escreva("Entre com um nro inteiro, 0 encerra: ")
			leia(n)

			se(n > maior){
				maior = n
			}
			
			se(n > 0){
				soma = soma + n
			}

			se(n % 5 == 0){
				qtd++
			}
		}enquanto(n != 0)

		escreva("O maior nro inserido foi: ", maior, "\nA soma dos nros positivos é: ", soma, "\nE a quantidade de nros divisíveis por 5 é: ", qtd)
	}
}

==================================================================================================================================================================================================================

2. Fazer um algoritmo que leia os lados de um retângulo, calcule e imprima a área e o perímetro.

programa
{
	
	funcao inicio()
	{
		real larg, comp, h, peri, area

		escreva("Insira a largura do retângulo: ")
		leia(larg)
		escreva("Insira o comprimento do retângulo: ")
		leia(comp)
		escreva("Insira a altura do retângulo: ")
		leia(h)

		peri = 2*larg + 2*comp + 2*h
		area = larg * comp * h

		escreva("-----------------------------------------------------------------------------------------------")
		escreva("\nO perímetro do retângulo é ", peri, "\nA área do retângulo é ", area)
	}
}

==================================================================================================================================================================================================================

3. Fazer um algoritmo que leia os lados de um retângulo, calcule e imprima a área e o perímetro de cada um. Parar a leitura de dados quando for digitado um valor inválido. Não usar vetor. Ao final, escrever a quantidade de retângulos.

programa
{
	
	funcao inicio()
	{
		real larg, comp, h, peri, area
		inteiro cont
		cont = 0

		faca{
			escreva("\nInsira a largura do retângulo: ")
			leia(larg)
				se(larg <= 0){
					escreva("\nValor inválido!")
				}
			escreva("\nInsira o comprimento do retângulo: ")
			leia(comp)
				se(comp <= 0){
					escreva("\nValor inválido!")
				}
			escreva("\nInsira a altura do retângulo: ")
			leia(h)
				se(h <= 0){
					escreva("\nValor inválido!")
				}

			peri = 2*larg + 2*comp + 2*h
			area = larg * comp * h

			se(larg > 0 e comp > 0 e h > 0){
				escreva("\nO perímetro do retângulo é ", peri, "\nA área do retângulo é ", area)
				cont++
			}
		}enquanto(larg > 0 e comp > 0 e h > 0)

		escreva("\n\n\n\nA quantidade de retângulos inseridos é ", cont)
	}
}

==================================================================================================================================================================================================================

4. Fazer um algoritmo que calcule e escreva a soma dos N primeiros termos da série a seguir. O número N deve ser fornecido pelo usuário. 
S = 1000/1 - 997/2 + 994/3 - 991/4 + ...

programa
{
    funcao inicio()
    {
    inteiro n, x, num, den
    real s, soma

    soma = 0.0
    num = 1000
    den = 1
    x = 1 

    escreva("Informe o valor de N: ")
    leia(n)
    enquanto(x <= n){
        s = num/den
        num = num-3
        den++
        x++
        se(x % 2 == 0 ou x == 0){
            soma = soma + s
        }
        senao{
            soma = soma - s
        }
    }
    escreva("Valor da soma: ", soma)
    }
}

==================================================================================================================================================================================================================

5. Fazer um algoritmo que leia a idade e o nome de 30 pessoas (o algoritmo não deve permitir valores inválidos). Os valores lidos devem ser armazenados em um vetor. Após a leitura de todos os valores, encontre: 
a) a média das idades; 
b) a quantidade de pessoas que possuem idade acima da média; 
c) o nome das pessoas que possuem idade abaixo da média; 
d) o nome da pessoa mais velha e da mais nova; 
e) para cada número lido, mostre uma tabela contendo o valor lido e o fatorial deste valor.

programa {
    funcao inicio() {
        real idades[30]
        real soma, media, idadeVelha = 0
        int acimaMedia = 0
        cadeia abaixoMedia = ""
        cadeia nomeVelha, nomeNova  = ""
        real idadeNova = 9999

        para (int i = 0; i < tam; i++) {
            real idade
            cadeia nome

            escreva("Nome da pessoa ", i+1, ": ")
            leia(nome)

            repita {
                escreva("Idade de ", nome, ": ")
                leia(idade)
            } enquanto (idade < 0)

            idades[i] = idade
            soma += idade
        }

        media = soma / tam

        para (int i = 0; i < tam; i++) {
            se (idades[i] > media) {
                acimaMedia++
            }

            se (idades[i] < media) {
                abaixoMedia += idades[i] + " "
            }

            se (idades[i] > idadeVelha) {
                nomeVelha += idades[i] + " "
                idadeVelha = idades[i]
            }

            se (idades[i] < idadeNova) {
                nomeNova += idades[i] + " "
                idadeNova = idades[i]
            }

            real valor = idades[i]
            real fatorial = 1
            para (int j = 1; j <= valor; j++) {
                fatorial *= j
            }

            escreva("Valor: ", valor, " | Fatorial: ", fatorial, "\n")
        }

        escreva("Média das idades: ", media, "\n")
        escreva("Quantidade de pessoas acima da média: ", acimaMedia, "\n")
        escreva("Nomes das pessoas abaixo da média: ", abaixoMedia, "\n")
        escreva("Pessoa mais velha: ", nomeVelha, "\n")
        escreva("Pessoa mais nova: ", nomeNova)
    }
}
